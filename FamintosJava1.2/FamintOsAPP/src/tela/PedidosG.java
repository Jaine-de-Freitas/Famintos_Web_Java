/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela;

import DAO.PedidosDAO;
import DTO.PedidosDTO;

/*import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.layout.element.Image;*/
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/*import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.*;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import java.awt.Desktop;
import java.awt.event.ActionListener;
import java.io.FileOutputStream;
import org.apache.log4j.*;*/
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.event.ActionListener;
import java.io.FileOutputStream;
import java.net.MalformedURLException;

//import com.itextpdf.io.image.ImageData; 
//import com.itextpdf.io.image.ImageDataFactory; 
import com.itextpdf.text.Image;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.pdf.BaseFont;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
//import com.itextpdf.kernel.pdf.PdfWriter;

//import com.itextpdf.layout.Document; 
//import com.itextpdf.layout.element.Image;
/**
 *
 * @author jaine
 */
public class PedidosG extends javax.swing.JFrame {

    JPopupMenu jpm2 = new JPopupMenu();
    JMenuItem excluir = new JMenuItem();
    String rua, numero, bairro, cidade, estado;

    /**
     * Creates new form PedidosG
     */
    public PedidosG() {
        initComponents();
        ups.setVisible(false);
        num.setVisible(false);
        tbl.getColumnModel().getColumn(0).setMinWidth(50);
        tbl.getColumnModel().getColumn(0).setMaxWidth(50);
        tbl.getColumnModel().getColumn(0).setPreferredWidth(50);
        pnlA.setVisible(false);
        ListarPedidos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtUser = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        linkft = new javax.swing.JLabel();
        rolagem = new javax.swing.JScrollPane();
        panelroll = new javax.swing.JPanel();
        ups = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        num = new javax.swing.JLabel();
        pnlA = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtCliente = new javax.swing.JLabel();
        txtCliente1 = new javax.swing.JLabel();
        txtCliente2 = new javax.swing.JLabel();
        txtNm = new javax.swing.JTextField();
        txtMesa = new javax.swing.JTextField();
        txtProduto = new javax.swing.JTextField();
        txtItem = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        spN = new javax.swing.JSpinner();
        images1 = new javax.swing.JLabel();
        txtCliente3 = new javax.swing.JLabel();
        txtModalidade = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        txtCliente4 = new javax.swing.JLabel();
        txtCliente5 = new javax.swing.JLabel();
        txtRua = new javax.swing.JTextField();
        txtCliente6 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        txtCliente7 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        txtCliente8 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        txtCliente9 = new javax.swing.JLabel();
        txtUf = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        carrNome = new javax.swing.JTextField();
        carrMesa = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        carrModalidade = new javax.swing.JTextField();
        carrEndereco = new javax.swing.JTextField();
        txtCDG = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pedidos Pendentes");

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));
        jPanel1.setLayout(null);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/famintos.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 40, 1310, 50);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText(" Conectado como");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(0, 100, 640, 30);

        txtUser.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtUser.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtUser);
        txtUser.setBounds(650, 100, 660, 30);

        jButton1.setText("MENU");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1140, 10, 70, 23);

        jButton3.setText("SAIR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(1220, 10, 80, 23);

        linkft.setEnabled(false);
        jPanel1.add(linkft);
        linkft.setBounds(40, 500, 220, 0);

        panelroll.setPreferredSize(new java.awt.Dimension(900, 448));

        /*
        ups.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        */

        javax.swing.GroupLayout panelrollLayout = new javax.swing.GroupLayout(panelroll);
        panelroll.setLayout(panelrollLayout);
        panelrollLayout.setHorizontalGroup(
            panelrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ups, javax.swing.GroupLayout.DEFAULT_SIZE, 998, Short.MAX_VALUE)
        );
        panelrollLayout.setVerticalGroup(
            panelrollLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelrollLayout.createSequentialGroup()
                .addComponent(ups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(448, Short.MAX_VALUE))
        );

        rolagem.setViewportView(panelroll);

        jPanel1.add(rolagem);
        rolagem.setBounds(210, 140, 1010, 440);

        jButton5.setText("ATUALIZAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(940, 590, 120, 23);

        jButton2.setText("NOVO PEDIDO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(1080, 590, 120, 23);
        jPanel1.add(num);
        num.setBounds(1170, 620, 0, 30);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        txtCliente.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtCliente.setText("Nome do Cliente:");

        txtCliente1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtCliente1.setText("Mesa do Cliente:");

        txtCliente2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtCliente2.setText("Produto/Item");

        txtMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMesaActionPerformed(evt);
            }
        });

        txtProduto.setBackground(new java.awt.Color(255, 255, 204));
        txtProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProdutoKeyPressed(evt);
            }
        });

        txtItem.setEditable(false);

        jButton4.setText("ADD");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        spN.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                spNCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        spN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                spNKeyReleased(evt);
            }
        });

        txtCliente3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtCliente3.setText("Sobre o pedido:");

        txtModalidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Receber Aqui", "Levar para viagem", "Delivery" }));
        txtModalidade.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtModalidadeInputMethodTextChanged(evt);
            }
        });

        jButton7.setText("ADD");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton6.setText("ADD");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton10.setText("ADD");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        txtCliente4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtCliente4.setText("Endereço:");

        txtCliente5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtCliente5.setText("Rua:");

        txtCliente6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtCliente6.setText("nº:");

        txtCliente7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtCliente7.setText("Bairro:");

        txtCliente8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtCliente8.setText("Cidade:");

        txtCliente9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtCliente9.setText("UF:");

        jButton11.setText("ADD");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(spN, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtNm, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCliente3, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtCliente8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCliente9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtUf, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(images1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtCliente4)
                                .addContainerGap())
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCliente7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCliente5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCliente6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNum)))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(txtCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNm, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtCliente1)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCliente5)
                                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCliente6)
                                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCliente7)
                                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCliente8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCliente9)
                                    .addComponent(txtUf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(117, 117, 117)
                                        .addComponent(images1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addComponent(txtCliente3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(23, 23, 23)
                                        .addComponent(txtCliente2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtItem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCliente4)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jButton8.setText("CANCELAR");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("SALVAR");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        carrNome.setEditable(false);

        carrMesa.setEditable(false);

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "QTD", "Item"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.setGridColor(new java.awt.Color(255, 255, 255));
        tbl.setOpaque(false);
        tbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl.getTableHeader().setResizingAllowed(false);
        tbl.getTableHeader().setReorderingAllowed(false);
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl);
        if (tbl.getColumnModel().getColumnCount() > 0) {
            tbl.getColumnModel().getColumn(0).setResizable(false);
            tbl.getColumnModel().getColumn(1).setResizable(false);
        }

        carrModalidade.setEditable(false);

        carrEndereco.setEditable(false);

        txtCDG.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(carrNome)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
            .addComponent(carrMesa)
            .addComponent(carrModalidade)
            .addComponent(carrEndereco)
            .addComponent(txtCDG)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(carrNome, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(carrMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(carrModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(carrEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlALayout = new javax.swing.GroupLayout(pnlA);
        pnlA.setLayout(pnlALayout);
        pnlALayout.setHorizontalGroup(
            pnlALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlALayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlALayout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlALayout.setVerticalGroup(
            pnlALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addGap(15, 15, 15))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(pnlA);
        pnlA.setBounds(120, 140, 1160, 440);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1364, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String Nome = txtUser.getText();
        Menu mn = new Menu();
        mn.txtUsuario.setText(Nome);
        mn.setVisible(true);
        mn.chamar();
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        LimparTela();
        ListarPedidos();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jButton4.setEnabled(true);
        jButton6.setEnabled(true);
        jButton10.setEnabled(true);
        jButton11.setEnabled(true);

        jButton8.setEnabled(true);
        jButton9.setEnabled(true);
        carrNome.setText("");
        carrMesa.setText("");
        carrModalidade.setText("");
        carrEndereco.setText("");
        txtCDG.setText("");
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        model.setNumRows(0);
        txtNm.setText("");
        txtMesa.setText("");
        txtModalidade.setSelectedIndex(0);
        txtRua.setText("");
        txtNum.setText("");
        txtBairro.setText("");
        txtCidade.setText("");
        txtUf.setText("");
        Novo();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdutoKeyPressed
        Pesquisa();
    }//GEN-LAST:event_txtProdutoKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (!txtNm.getText().isEmpty() & txtNm.getText().replaceAll("[A-Za-záéíóúçâêîôûãõÁÉÍÓÚÂÊÎÔÛÃÕÇ ]", "").length() == 0) {
            carrNome.setText(txtNm.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Campo vazio ou preenchido incorretamente!");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (!txtMesa.getText().isEmpty() & txtMesa.getText().replaceAll("[0-9]", "").length() == 0) {
            carrMesa.setText(txtMesa.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Campo vazio ou preenchido incorretamente!");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (!txtItem.getText().isEmpty() & spN.getValue().toString().replaceAll("[0-9]", "").length() == 0 & Integer.parseInt(spN.getValue().toString()) >= 1) {
            DefaultTableModel model = (DefaultTableModel) tbl.getModel();
            model.addRow(new Object[]{
                spN.getValue().toString(),
                txtItem.getText()
            });
            txtProduto.setText("");
            txtItem.setText("");
            spN.setValue(0);
        } else {
            JOptionPane.showMessageDialog(null, "Campo item ou quantidade vazio(s), ou preenchidos incorretamente!");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void spNCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_spNCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_spNCaretPositionChanged

    private void spNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spNKeyReleased

    }//GEN-LAST:event_spNKeyReleased

    private void txtMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMesaActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        carrModalidade.setText(txtModalidade.getSelectedItem().toString());
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if (txtRua.getText().isEmpty() || txtNum.getText().isEmpty() || txtBairro.getText().isEmpty() || txtCidade.getText().isEmpty() || txtUf.getText().isEmpty() || txtRua.getText().contains("|") || txtNum.getText().contains("|") || txtBairro.getText().contains("|") || txtCidade.getText().contains("|") || txtUf.getText().contains("|") || txtUf.getText().replaceAll("[A-Za-z]", "").length() != 0 || txtUf.getText().length() != 2) {
            JOptionPane.showMessageDialog(null, "Algum campo de endereço vazio ou preenchido incorretamente!");
        } else {
            carrEndereco.setText(txtRua.getText() + " | " + txtNum.getText() + " | " + txtBairro.getText() + " | " + txtCidade.getText() + " | " + txtUf.getText());
            rua = txtRua.getText();
            numero = txtNum.getText();
            bairro = txtBairro.getText();
            cidade = txtCidade.getText();
            estado = txtUf.getText();
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        if (tbl.getSelectedRow() != -1) {
            excluir.setText("Excluir");
            jpm2.add(excluir);
            jpm2.show(tbl, evt.getX(), evt.getY());
            DefaultTableModel model = (DefaultTableModel) tbl.getModel();
            excluir.addActionListener((ActionEvent evt1) -> {
                model.removeRow(tbl.getSelectedRow());
            });
        }
    }//GEN-LAST:event_tblMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        Pedir();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jButton4.setEnabled(true);
        jButton6.setEnabled(true);
        jButton10.setEnabled(true);
        jButton11.setEnabled(true);

        jButton8.setEnabled(true);
        jButton9.setEnabled(true);
        carrNome.setText("");
        carrMesa.setText("");
        carrModalidade.setText("");
        carrEndereco.setText("");
        txtCDG.setText("");
        DefaultTableModel model = (DefaultTableModel) tbl.getModel();
        model.setNumRows(0);
        txtNm.setText("");
        txtMesa.setText("");
        txtModalidade.setSelectedIndex(0);
        txtRua.setText("");
        txtNum.setText("");
        txtBairro.setText("");
        txtCidade.setText("");
        txtUf.setText("");
        pnlA.setVisible(false);
        rolagem.setVisible(true);
        LimparTela();
        ListarPedidos();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void txtModalidadeInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtModalidadeInputMethodTextChanged

    }//GEN-LAST:event_txtModalidadeInputMethodTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PedidosG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PedidosG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PedidosG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PedidosG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PedidosG().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField carrEndereco;
    private javax.swing.JTextField carrMesa;
    private javax.swing.JTextField carrModalidade;
    private javax.swing.JTextField carrNome;
    private javax.swing.JLabel images1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel linkft;
    private javax.swing.JLabel num;
    private javax.swing.JPanel panelroll;
    private javax.swing.JPanel pnlA;
    private javax.swing.JScrollPane rolagem;
    private javax.swing.JSpinner spN;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCDG;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JLabel txtCliente;
    private javax.swing.JLabel txtCliente1;
    private javax.swing.JLabel txtCliente2;
    private javax.swing.JLabel txtCliente3;
    private javax.swing.JLabel txtCliente4;
    private javax.swing.JLabel txtCliente5;
    private javax.swing.JLabel txtCliente6;
    private javax.swing.JLabel txtCliente7;
    private javax.swing.JLabel txtCliente8;
    private javax.swing.JLabel txtCliente9;
    private javax.swing.JTextField txtItem;
    private javax.swing.JTextField txtMesa;
    private javax.swing.JComboBox<String> txtModalidade;
    private javax.swing.JTextField txtNm;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtProduto;
    private javax.swing.JTextField txtRua;
    private javax.swing.JTextField txtUf;
    public javax.swing.JLabel txtUser;
    private javax.swing.JPanel ups;
    // End of variables declaration//GEN-END:variables
    private void ListarPedidos() {
        PedidosDTO pedDTO = new PedidosDTO();
        PedidosDAO pedDAO = new PedidosDAO();
        ArrayList<PedidosDTO> listar = pedDAO.FiltrarNomes(pedDTO);
        String[] pedidos = new String[listar.size()];
        Set<String> setar = new HashSet<>();
        int tm = 0;
        int pdftm = 0;

        JPopupMenu jpm = new JPopupMenu();
        JMenuItem jmiImprimir = new JMenuItem();
        JMenuItem jmiEntregue = new JMenuItem();
        JMenuItem jmiAlterar = new JMenuItem();
        JMenuItem jmiCancelar = new JMenuItem();
        jmiImprimir.setText("Imprimir comanda");
        jmiEntregue.setText("Marcar como entregue");
        jmiAlterar.setText("Adicionar item");
        jmiCancelar.setText("Cancelar pedido");
        jpm.add(jmiImprimir);
        jpm.add(jmiEntregue);
        jpm.add(jmiAlterar);
        jpm.add(jmiCancelar);
        String compraS = "";
        for (int n = 0; n < listar.size(); n++) {
            pedidos[n] = listar.get(n).getCd_cliente();
        }
        for (String a : pedidos) {
            setar.add(a);
        }
        String arr[] = new String[setar.size()];
        setar.toArray(arr);

        int ver = setar.size();
        num.setText(String.valueOf(ver));
        panelroll.setPreferredSize(new java.awt.Dimension(80 + 310 * ver, 400));
        for (int n = 0; n < setar.size(); n++) {
            int numeroS = 0;
            double soma = 0;
            //System.out.println(arr[n]);
            JTextArea jTextArea = new javax.swing.JTextArea("jTextArea" + n);
            JScrollPane scroll = new JScrollPane(jTextArea);
            scroll.setBounds(15 + 320 * n, 20, 310, 390);

            panelroll.add(scroll);
            jTextArea.setLineWrap(true);
            jTextArea.setWrapStyleWord(true);
            jTextArea.setEditable(false);
            jTextArea.setSelectionColor(Color.white);
            jTextArea.setSelectedTextColor(Color.black);
            jTextArea.setFocusable(false);
            jTextArea.setAutoscrolls(true);
            jTextArea.setText("");

            PedidosDTO p1DTO = new PedidosDTO();
            PedidosDAO p1DAO = new PedidosDAO();

            p1DTO.setCd_cliente(arr[n]);
            ArrayList<PedidosDTO> tickets = p1DAO.pegarTickets(p1DTO);
            //p1DAO.Somar(p1DTO);
            String[] ticket = new String[tickets.size()];
            Set<String> setarTick = new HashSet<>();

            for (int ns = 0; ns < tickets.size(); ns++) {
                ticket[ns] = tickets.get(ns).getNo_Ticket();
            }
            for (String b : ticket) {
                setarTick.add(b);
            }
            String arr2[] = new String[setarTick.size()];
            setarTick.toArray(arr2);
            numeroS = tickets.size() + (setarTick.size() * 2) + (setarTick.size() * 2);

            pdftm = pdftm + 1;
            for (int h = 0; h < setarTick.size(); h++) {
                //pdftm=pdftm+1;
                PedidosDAO pddDAO = new PedidosDAO();
                PedidosDTO pddDTO = new PedidosDTO();
                pddDTO.setBusca(arr2[h]);
                ArrayList<PedidosDTO> pedidosE = pddDAO.Exibir(pddDTO);
                String[] listagem = new String[pedidosE.size()];
                String[] codigos = new String[pedidosE.size()];
                String[] nome = new String[1];
                String[] mesa = new String[1];

                String codigo_cliente = null;
                String rua2 = null;
                String bairro2 = null;
                String numero2 = null;
                String cidade2 = null;
                String estado2 = null;
                String opcao = null;
                String codigo_garcom = null;

                //double soma = 0;
                String formSoma = "";
                for (int numS = 0; numS < pedidosE.size(); numS++) {
                    pdftm = pdftm + 1;
                    codigos[numS] = pedidosE.get(numS).getCd_comida();
                    PedidosDAO pddsDAO = new PedidosDAO();
                    PedidosDTO pddsDTO = new PedidosDTO();
                    pddsDTO.setBusca2(codigos[numS]);
                    ArrayList<PedidosDTO> consultar = pddsDAO.Exibir2(pddsDTO);
                    String[] teste = new String[consultar.size()];
                    for (int ns = 0; ns < consultar.size(); ns++) {
                        //numeroS=numeroS+1;
                        teste[ns] = (consultar.get(ns).getNm_comida()).toUpperCase();
                        nome[0] = pedidosE.get(numS).getNome_cliente();
                        mesa[0] = pedidosE.get(numS).getCd_mesa();

                        tm = consultar.size();

                        codigo_cliente = pedidosE.get(numS).getCd_cliente();
                        codigo_garcom = pedidosE.get(numS).getCdg_garcom();
                        rua2 = pedidosE.get(numS).getRua();
                        bairro2 = pedidosE.get(numS).getBairro();
                        numero2 = pedidosE.get(numS).getNumero();
                        cidade2 = pedidosE.get(numS).getCidade();
                        estado2 = pedidosE.get(numS).getEstado();
                        opcao = pedidosE.get(numS).getOpcao();
                        listagem[numS] = "    " + pedidosE.get(numS).getQt_comida() + "    " + teste[ns] + "    R$" + pedidosE.get(numS).getVl_item() + " /und"/* + " R$" + pedidosE.get(num).getVl_total_item()*/;
                        compraS = compraS + listagem[numS] + "\n";
                        String[] conv = new String[1];
                        conv[0] = pedidosE.get(numS).getVl_total_item();
                        soma = soma + (Double.parseDouble(conv[0]));
                    }

                }
                formSoma = formSoma + (String.valueOf(soma));
                StringTokenizer casasN = new StringTokenizer(formSoma);
                String inteiro = casasN.nextToken(".");
                String decimal = casasN.nextToken(".");
                if (decimal.length() < 2) {
                    decimal = decimal + "0";
                } else {
                    decimal = decimal.substring(0, 2);
                }
                formSoma = inteiro + "," + decimal;
                String total = String.format("%58.5s", " ");
                String dados = "";
                String desc = "";
                if (opcao.equals("Delivery")) {
                    desc = "  " + opcao + ": " + rua2 + "," + numero2 + "," + bairro2 + "," + cidade2 + "-" + estado2;
                } else {
                    desc = "  " + opcao;
                }
                if (codigo_garcom == null) {
                    dados = "\n" + "  Nome do cliente: " + nome[0] + "\n" + "  Cod.Cliente: " + codigo_cliente + "\n" + "  Nº Mesa: " + mesa[0] + "\n" + desc + "\n" + "\n";
                } else {
                    dados = "\n" + "  Nome do cliente: " + nome[0] + "\n" + "  Cod.Cliente: " + codigo_garcom + "\n" + "  Nº Mesa: " + mesa[0] + "\n" + desc + "\n" + "\n";
                }
                if (jTextArea.getText().contains("Nome do cliente:")) {
                    jTextArea.setText(jTextArea.getText() + "  Ticket: " + arr2[h] + "\n" + "  Qtde    Descrição" + "\n" + compraS + "\n" + "\n");
                } else {
                    jTextArea.setText(dados + jTextArea.getText() + "  Ticket: " + arr2[h] + "\n" + "  Qtde    Descrição" + "\n" + compraS + "\n" + "\n");

                }
                compraS = "";
                
                String exibe = "                                                   TOTAL:   R$" + formSoma;
                if(h==setarTick.size()-1){
                jTextArea.setText(jTextArea.getText()+"\n"+exibe);
                }
                Date dataHoraAtual = new Date();
                String data = new SimpleDateFormat("dd-MM-yyyy").format(dataHoraAtual);
                String hora = new SimpleDateFormat("HH:mm:ss").format(dataHoraAtual);
                String nmarq = arr[n];
                String caminho = "D:\\FamintosJava1.2\\images\\logofamintospdf.png";
                String informar = jTextArea.getText();
                String ids = arr[n];
                double tamanho = tm;
                String rec = opcao;
                int testes = (numeroS * 15) + (6 * 15) + 220 + 70;
                
                jTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        if (evt.getModifiersEx() != 0) {
                            jTextArea.setBackground(new Color(216, 216, 216));
                            jpm.show(jTextArea, jTextArea.getX(), jTextArea.getY());
                            jmiImprimir.addActionListener(new ActionListener() {
                                @Override
                                public void actionPerformed(ActionEvent evt1) {
                                    Rectangle pagesize = new Rectangle(280f, testes);
                                    Document documento = new Document(pagesize, 10f, 10f, 50f, 10f);
                                    try {
                                        PdfWriter.getInstance(documento, new FileOutputStream("D:\\guardarpdfs\\comanda\\" + nmarq + ".pdf"));
                                        documento.open();
                                        Font fonte = new Font(FontFamily.COURIER, 10, Font.BOLD);
                                        Font fonte2 = new Font(FontFamily.UNDEFINED, 11, Font.NORMAL);
                                        Font fonte3 = new Font(FontFamily.COURIER, 13, Font.BOLD);
                                        Paragraph pgr1 = new Paragraph("Engenho D'Àgua, 1000, Jardim-CE" + "\n" + "(88) 9812-3456" + "\n" + "\n" + "Impresso em " + data + " " + hora + "\n" + "******** NÃO É CUPOM FISCAL ********", fonte);
                                        Paragraph pgr2 = new Paragraph(jTextArea.getText(), fonte2);
                                        //Paragraph pgr3 = new Paragraph(exibe + " ", fonte3);
                                        Paragraph pgr4 = new Paragraph("\n" + "******** VOLTE SEMPRE *********", fonte);
                                        Image img = Image.getInstance(String.format(caminho));
                                        img.scaleAbsolute(150, 43);
                                        img.setAbsolutePosition(67, (testes - 50));
                                        pgr1.setAlignment(Element.ALIGN_CENTER);
                                        //pgr3.setAlignment(Element.ALIGN_RIGHT);
                                        pgr4.setPaddingTop(25);
                                        pgr4.setAlignment(Element.ALIGN_CENTER);
                                        documento.add(img);
                                        documento.add(pgr1);
                                        documento.add(pgr2);
                                        //documento.add(pgr3);
                                        documento.add(pgr4);
                                        documento.close();
                                    } catch (DocumentException ex) {
                                        Logger.getLogger(PedidosG.class.getName()).log(Level.SEVERE, null, ex);
                                    } catch (IOException ex) {
                                        Logger.getLogger(PedidosG.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                            });
                            jmiEntregue.addActionListener((ActionEvent evt1) -> {
                                Rectangle pagesize = new Rectangle(280f, testes);
                                Document documento = new Document(pagesize, 10f, 10f, 50f, 10f);
                                try {
                                    PdfWriter.getInstance(documento, new FileOutputStream("D:\\guardarpdfs\\comanda\\" + nmarq + ".pdf"));
                                    documento.open();
                                    Font fonte = new Font(FontFamily.COURIER, 10, Font.BOLD);
                                    Font fonte2 = new Font(FontFamily.UNDEFINED, 11, Font.NORMAL);
                                    Font fonte3 = new Font(FontFamily.COURIER, 13, Font.BOLD);
                                    Paragraph pgr1 = new Paragraph("Engenho D'Àgua, 1000, Jardim-CE" + "\n" + "(88) 9812-3456" + "\n" + "\n" + "Impresso em " + data + " " + hora + "\n" + "******** NÃO É CUPOM FISCAL ********", fonte);
                                    Paragraph pgr2 = new Paragraph(informar, fonte2);
                                    Paragraph pgr3 = new Paragraph(exibe + " ", fonte3);
                                    Paragraph pgr4 = new Paragraph("\n" + "******** VOLTE SEMPRE *********", fonte);
                                    Image img = Image.getInstance(String.format(caminho));
                                    img.scaleAbsolute(150, 43);
                                    img.setAbsolutePosition(67, (testes - 50));
                                    pgr1.setAlignment(Element.ALIGN_CENTER);
                                    pgr3.setAlignment(Element.ALIGN_RIGHT);
                                    pgr4.setPaddingTop(25);
                                    pgr4.setAlignment(Element.ALIGN_CENTER);
                                    documento.add(img);
                                    documento.add(pgr1);
                                    documento.add(pgr2);
                                    documento.add(pgr3);
                                    documento.add(pgr4);
                                    documento.close();
                                } catch (DocumentException ex) {
                                    Logger.getLogger(PedidosG.class.getName()).log(Level.SEVERE, null, ex);
                                } catch (IOException ex) {
                                    Logger.getLogger(PedidosG.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                PedidosDAO pddsDAO = new PedidosDAO();
                                PedidosDTO pddsDTO = new PedidosDTO();
                                pddsDTO.setBusca2(nmarq);
                                ArrayList<PedidosDTO> consultar2 = pddsDAO.Exibir3(pddsDTO);
                                String[] teste = new String[consultar2.size()];
                                for (int ns = 0; ns < consultar2.size(); ns++) {
                                    teste[ns] = consultar2.get(ns).getCd();
                                    pddsDTO.setCd_venda(teste[ns]);
                                    pddsDTO.setOp("ENTREGUE");
                                    pddsDAO.alterarStatus(pddsDTO);
                                }
                                LimparTela();
                                ListarPedidos();
                            });
                            jmiAlterar.addActionListener((ActionEvent evt1) -> {
                                if (jTextArea.getText().contains("Delivery")) {
                                    JOptionPane.showMessageDialog(null, "Não é possivel adicionar itens à pedidos delivery!");
                                } else {
                                    jButton4.setEnabled(false);
                                    jButton6.setEnabled(false);
                                    jButton10.setEnabled(false);
                                    jButton11.setEnabled(false);
                                    carrNome.setText(nome[0]);
                                    carrMesa.setText(mesa[0]);
                                    carrModalidade.setText(rec);
                                    txtCDG.setText(nmarq);
                                    Novo();
                                }
                            });
                            jmiCancelar.addActionListener((ActionEvent evt1) -> {
                                PedidosDAO pddsDAO = new PedidosDAO();
                                PedidosDTO pddsDTO = new PedidosDTO();
                                pddsDTO.setBusca2(nmarq);
                                //pddsDTO.setOp("ENTREGUE");
                                ArrayList<PedidosDTO> consultar2 = pddsDAO.Exibir3(pddsDTO);
                                String[] teste = new String[consultar2.size()];
                                for (int ns = 0; ns < consultar2.size(); ns++) {
                                    teste[ns] = consultar2.get(ns).getCd();
                                    pddsDTO.setCd_venda(teste[ns]);
                                    pddsDTO.setOp("CANCELAR");
                                    pddsDAO.alterarStatus(pddsDTO);
                                }
                                LimparTela();
                                ListarPedidos();
                            });
                        }
                    }

                    @Override
                    public void mouseExited(java.awt.event.MouseEvent evt) {
                        jTextArea.setBackground(Color.white);
                    }
                });
            }
            System.out.println("\n");

        }
    }

    private void LimparTela() {
        ups.setVisible(true);
        panelroll.removeAll();
        panelroll.setPreferredSize(new java.awt.Dimension(80 + 310, 400));
        ups.setVisible(false);
    }

    private void Novo() {
        rolagem.setVisible(false);
        pnlA.setVisible(true);
    }

    private void Pesquisa() {
        PedidosDAO pedDAO = new PedidosDAO();
        PedidosDTO pedDTO = new PedidosDTO();
        pedDTO.setBusca(txtProduto.getText());
        ArrayList<PedidosDTO> itens = pedDAO.Item(pedDTO);
        if (itens.size() == 0 || txtProduto.getText().equals(" ") || txtProduto.getText().isEmpty()) {
            txtItem.setText("");
        } else {
            String st = itens.get(0).getNm_comida() + " (id:" + itens.get(0).getCd_comida() + ")";
            txtItem.setText(st);
        }
    }

    private void Pedir() {
        if (carrNome.getText().isEmpty() || carrMesa.getText().isEmpty() || tbl.getRowCount() < 1 || carrModalidade.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Algum campo vazio. Não foi possivel finalizar o pedido");
        } else if (carrEndereco.getText().isEmpty() & carrModalidade.getText().equals("Delivery")) {
            JOptionPane.showMessageDialog(null, "Algum campo vazio. Não foi possivel finalizar o pedido");
        } else {
            jButton8.setEnabled(false);
            jButton9.setEnabled(true);
            String nome = carrNome.getText();
            String mesa = carrMesa.getText();
            String[] pedidos = new String[tbl.getRowCount()];
            String[] qtds = new String[tbl.getRowCount()];
            for (int n = 0; n < tbl.getRowCount(); n++) {
                PedidosDTO pdiDTO = new PedidosDTO();
                PedidosDAO pdiDAO = new PedidosDAO();

                PedidosDTO pddsDTO = new PedidosDTO();
                PedidosDAO pddsDAO = new PedidosDAO();

                pedidos[n] = (String) tbl.getValueAt(n, 1);
                qtds[n] = (String) tbl.getValueAt(n, 0);
                String[] st2 = pedidos[n].split("id:");
                String st3 = st2[1].replace(")", "");

                Date dataHoraAtual = new Date();
                String data = new SimpleDateFormat("dd-MM-yyyy").format(dataHoraAtual);
                String hora = new SimpleDateFormat("HH:mm:ss").format(dataHoraAtual);
                data = data.replaceAll("-", "");
                String dia = data.substring(0, 2);
                String mes = data.substring(2, 4);
                String ano = data.substring(6, 8);
                String dataof = ano + mes + dia + hora;
                dataof = dataof.replaceAll(":", "");

                if (!txtCDG.getText().isEmpty()) {
                    pdiDTO.setNo_Ticket("g" + dataof);
                    pdiDTO.setCd_cliente(txtCDG.getText());
                    pdiDTO.setCdg_garcom("gc" + dataof);
                } else {
                    pdiDTO.setNo_Ticket("g" + dataof);
                    pdiDTO.setCd_cliente("gc" + dataof);
                    pdiDTO.setCdg_garcom("gc" + dataof);
                }
                pdiDTO.setNome_cliente(nome);
                pdiDTO.setCd_mesa(mesa);
                pdiDTO.setCd_comida(st3);
                pdiDTO.setQt_comida(qtds[n]);

                pddsDTO.setNconsul(Integer.parseInt(st3));
                ArrayList<PedidosDTO> consultar = pddsDAO.Valores(pddsDTO);
                String[] preco = new String[consultar.size()];
                preco[0] = consultar.get(0).getVl_preco();

                pdiDTO.setVl_item(preco[0]);
                Date dataHoraAtual2 = new Date();
                String data2 = new SimpleDateFormat("yyyy-MM-dd").format(dataHoraAtual2);
                pdiDTO.setDt_venda(data2);
                pdiDTO.setCd_mesa(carrMesa.getText());
                if (!carrModalidade.getText().isEmpty()) {
                    pdiDTO.setRua(rua);
                    pdiDTO.setBairro(bairro);
                    pdiDTO.setNumero(numero);
                    pdiDTO.setCidade(cidade);
                    pdiDTO.setEstado(estado);
                } else {
                    pdiDTO.setRua(null);
                    pdiDTO.setBairro(null);
                    pdiDTO.setNumero(null);
                    pdiDTO.setCidade(null);
                    pdiDTO.setEstado(null);
                }
                pdiDTO.setOpcao(carrModalidade.getText());
                pdiDAO.NovoPedido(pdiDTO);

            }

            jButton8.setEnabled(true);
            jButton9.setEnabled(true);
            carrNome.setText("");
            carrMesa.setText("");
            carrModalidade.setText("");
            carrEndereco.setText("");
            txtCDG.setText("");
            DefaultTableModel model = (DefaultTableModel) tbl.getModel();
            model.setNumRows(0);
            txtNm.setText("");
            txtMesa.setText("");
            txtModalidade.setSelectedIndex(0);
            txtRua.setText("");
            txtNum.setText("");
            txtBairro.setText("");
            txtCidade.setText("");
            txtUf.setText("");
            JOptionPane.showMessageDialog(null, "Pedido registrado!");
        }
    }
}
//ajustar tamanho da comanda, ajustar imagem(logo) na comanda e mostra dos dados da comanda e do total
